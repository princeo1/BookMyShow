{"version":3,"sources":["Components/Buttons/ButtonNormal.js","Components/Buttons/ButtonDropdown.js","Components/Navbar/Navbar.js","Components/Card/Card.js","Components/Cardlist/CardList.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonNormal","text","btnColor","style","backgroundColor","className","ButtonDropdown","arr","addFilter","marginLeft","map","val","onClick","href","Navbar","finalFilter","useState","appliedFilters","setAppliedFilters","childData","newFiltered","push","fontFamily","color","fontSize","margin","class","filter","curr","deleteFilter","Card","imageLink","rDate","wtsCount","split","month","year","length","backgroundImage","width","CardList","list1","buttonInfo","List","setList","useEffect","Axios","get","then","res","data","catch","err","console","log","movieList","moviesData","arr1","movie","includes","EventLanguage","EventGenre","index","EventImageUrl","DispReleaseDate","App","setArray","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51f2e25b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ButtonNormal.css';\r\n\r\nconst ButtonNormal = ({text,btnColor})=>{                       // This button accepts text and colour of button and displays the button\r\n    return(\r\n        <div>\r\n            <button style={{backgroundColor:`${btnColor}`}}className=\"btn-normal \">{`${text}`}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonNormal;\r\n","import React from 'react';\r\nimport './ButtonDropdown.css';\r\nimport { BiChevronDown } from \"react-icons/bi\";\r\n\r\nconst ButtonDropdown = ({text,arr,addFilter}) =>{      // onclick of this button filter is added\r\n    return(\r\n        <div className=\"dropdown\">\r\n            <button className=\"btn-dropdown\">{`${text}`}<BiChevronDown style={{marginLeft:\"auto\"}}/></button>\r\n            <div className=\"dropdown-content\">\r\n                {\r\n                    arr.map((val)=>{\r\n                        return (<a onClick={()=>addFilter(val)}href=\"#\">{`${val}`}</a>)\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ButtonDropdown;","import React ,{useState} from 'react';\r\nimport ButtonNormal from '../Buttons/ButtonNormal';\r\nimport ButtonDropdown from '../Buttons/ButtonDropdown';\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport './Navbar.css';\r\nconst Navbar =({finalFilter})=>{\r\n\r\n  let [appliedFilters,setAppliedFilters] = useState([]);\r\n\r\n  const addFilter = (childData) =>{                                  \r\n    const newFiltered = [...appliedFilters];\r\n    newFiltered.push(childData);\r\n    setAppliedFilters(newFiltered);\r\n    finalFilter(newFiltered);\r\n    // console.log(newFiltered);\r\n  }\r\n\r\n  const deleteFilter=(val)=>{\r\n    const newFiltered = appliedFilters.filter((curr)=>curr!==val);\r\n    setAppliedFilters(newFiltered);\r\n    finalFilter(newFiltered);\r\n    // console.log(newFiltered);\r\n  }\r\n\r\n  let popular = ['Popular','fresh'];\r\n  let allLanguage =['Hindi','English','Marathi','Tamil','Malayalam','Kannada','Bhojpuri','Punjabi','Gujrati','Telegu','Bengali','Assamese','Rajasthani','French','Ladakh','Swedish','Arabic'];\r\n  let allGeneres = ['Action','Adventure','Animation','Biography','Classic','Comedy','Crime','Drama','Family','Fantast','History','Horror','Musical','Mystery','Period','Psychological','Roamnce','Sci-fi','Social','Sports','suspense','Thriller','War'];\r\n    \r\n  return(\r\n        <div>\r\n        <nav className=\"main-nav\">\r\n        <div className=\"main-nav-left\">\r\n          <h5 style={{fontFamily: 'Brush Script MT',color:'white',fontSize:'20px',margin:'5px'}}>Movie Trailer</h5>\r\n          <ButtonNormal text='Coming Soon' btnColor='#49BA8E'/>\r\n          <ButtonNormal text='Now Showing' btnColor='rgb(51,51,51)'/>\r\n        </div>\r\n        <div className=\"main-nav-right\">\r\n          <ButtonDropdown text='Popular'  arr={popular} addFilter={addFilter}/>\r\n          <ButtonDropdown text='English'  arr={allLanguage} addFilter={addFilter}/>\r\n          <ButtonDropdown text='All Genres' arr={allGeneres} addFilter={addFilter}/>\r\n        </div>\r\n        <button class=\"btn-cross\"><AiOutlineClose/></button>\r\n      </nav>\r\n      <div class=\"filterApplied\">\r\n      <h5 style={{color:'grey',fontSize:'10px',margin:'5px'}}>Applied Filters:</h5>\r\n      {\r\n        appliedFilters.map((val)=>{\r\n        return(<div className=\"filtered-list-each-div\">{`${val}`}<button onClick={()=>deleteFilter(val)} className=\"btn-cross-filter\"><AiOutlineClose/></button></div>)\r\n        })\r\n      }\r\n      </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './Card.css';                                                \r\nimport { AiTwotoneLike } from \"react-icons/ai\";\r\n\r\nconst Card = ({imageLink,rDate,wtsCount}) =>{                           // This component accepts each card's information and returns a card\r\n    const arr = rDate.split(\" \");\r\n    const month = arr[0];\r\n    const year = arr[arr.length-1];\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"imgArea\"  style={{backgroundImage:`url(${imageLink})`}}>\r\n                <nav className=\"imgNav\">\r\n                    <div className=\"circle\">\r\n                       <span>{`${month}`}</span>\r\n                       <span>{`${year}`}</span>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"btn-area\">\r\n                    <div className=\"btn-circle\">\r\n                        <div className=\"btn-tri\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"imgFoot\">\r\n                       <span><AiTwotoneLike />100%</span>\r\n                       <span>{`${wtsCount}`}</span>\r\n                </div>\r\n            </div>\r\n            <footer style={{width:\"180px\"}}>{`NoteBook NoteBook NoteBook NoteBook NoteBook`}</footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React ,{useState,useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport Card from '../Card/Card';\r\n\r\nconst CardList=({list1,buttonInfo})=>{\r\n    // console.log(list1,'hii');\r\n\r\n    const [List,setList]=useState([]);\r\n    // const [showingList,setShowingList] = useState([]);\r\n\r\n    useEffect(()=>{\r\n    Axios.get('https://peaceful-forest-62260.herokuapp.com/')\r\n    .then(res=>{setList(res.data);})\r\n    .catch(err=>{console.log(err)})\r\n    },[])\r\n\r\n    const movieList = List.moviesData;\r\n    let arr=[];\r\n    let arr1=[];\r\n\r\n    for(let movie in movieList)\r\n    {\r\n        arr.push(movieList[movie]);\r\n    }\r\n    if(list1.length===0)\r\n    {\r\n        arr1=arr;\r\n    }\r\n    else\r\n    {\r\n        arr1 = arr.filter(function(val)\r\n        {\r\n            return(\r\n                list1.includes(val.EventLanguage) || list1.includes(val.EventGenre)\r\n            )\r\n        })\r\n        // console.log('hihi',arr1);\r\n    }\r\n\r\n    return(\r\n        <div className=\"card-area\">\r\n        {\r\n          arr1.map((val,index)=>{\r\n            return (<Card onClick={()=>buttonInfo(val)}imageLink={`${val.EventImageUrl}`} rDate={`${val.DispReleaseDate}`} wtsCount={`${val.wtsCount}`} />)\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n}\r\nexport default CardList;\r\n","import React ,{useState} from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar';                // importing  Navbar component\nimport CardList from './Components/Cardlist/CardList';           // importing  CardList component which contains all the all cards\n// import Trailer from './Components/Trailer/Trailer';                // importing  Trailer component which shows the trailer\n\nfunction App() {\n\n  let [arr1,setArray] = useState([]);                         \n  let [infoButton,setInfoButton] = useState();\n  const finalFilter = (arr)=>{\n    setArray(arr);\n    // console.log(arr1);\n  }\n\n  let buttonInfo=(val)=>{                   \n    console.log(val);\n  }\n  return (\n    <div className=\"App\">\n      <Navbar finalFilter={finalFilter}/>      \n      {/* <Trailer/> */}\n      <CardList list1 = {arr1} buttonInfo={buttonInfo}/>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}